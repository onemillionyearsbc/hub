namespace io.onemillionyearsbc.hubtutorial.jobs


asset JobAds identified by email{
  o String      email 
  o Integer     live default=0
  o Integer     posted default=0
  o Integer     remaining default=0
  o Integer     searches default=0
}

concept CVSearchCriteria {
  o Boolean   remote default=false
  o JobTypeSearch   jobType default="ANY"
  o String    jobTitle optional
  o String[]  languages optional
  o String[]  skills 
  o BlockchainType  blockchainName default="NONE"
  o String    city optional 
  o String    country optional
}

concept AlertCriteria {
  o Boolean   remote default=false
  o Boolean   fulltime default=true
  o String[]  skills 
  o BlockchainType  blockchainName optional
  o String    city optional 
  o String    country optional
} 

event AlertEvent {
  o String    alertId
  o String    name
}

event JobApplicationEvent {
  o String    jobReference
  o String    name
  o String    email
}

asset JobAlert identified by alertId {
  o String     alertId // alertId will be {email-uuid} eg emerysolutions@yahoo.co.uk-98653548
  o DateTime   datePosted
  o Boolean    alertOn default=true
  o AlertCriteria alertCriteria
}

concept CandidateResult {
  o String      email 
  o String      name
  o String      location
  o String      skills
}

asset CVSearchResults identified by resultId {
  o String resultId
  o String email
  o Integer numResults // can be any number, 10 is the limit to send back
  o CandidateResult[] results // max 10 
}

asset JobPosting identified by jobReference {
  o String      jobReference 
  o String      email 
  o String      company
  o JobType     jobType
  o Boolean     remote

  o String      jobTitle
  o BlockchainType      blockchainName
  o String      description

  o String      contact
  o String      internalRef
  o Boolean     employer
  o String      salary optional
  o String      location optional // country
  o String      city optional
  o Double      longitude optional
  o Double      latitude optional
  o String[]    skills
  
  o String      logohash

  // these are auto calculated in the smart contract
  o DateTime    datePosted
  o DateTime    expiryDate
  o Integer     views
  --> JobApplication[]     applications optional // list of emails of applicants
}

asset JobApplication identified by applicationId {
  o String      applicationId
  o String      email 
  o String      name
  o String      location
  o String      jobReference 
  o DateTime    dateApplied
}


enum JobTypeSearch {
  o ANY
  o FULLTIME
  o CONTRACT
  o PARTTIME
  o INTERNSHIP
  o OTHER
}

enum JobType {
  o FULLTIME
  o CONTRACT
  o PARTTIME
  o INTERNSHIP
  o OTHER
}
  
enum BlockchainType {
  o CORDA
  o ETHEREUM
  o HYPERLEDGER
  o NEO
  o QUOROM
  o RIPPLE
  o OTHER
  o NONE
}

enum AccountType {
  o   JOBSEEKER
  o   RECRUITER
}

transaction BuyJobCredits {
  o String    email 
  o Integer		credits default = 0
  o Integer   searches default = 0
}

concept JobPostingParameters {
  o String    jobReference
  o String    email
  o String    company
  o JobType   jobType default = "FULLTIME"
  o Boolean   remote

  o String    jobTitle
  o String    blockchainName default = "ETHEREUM"
  o String    description

  o String      contact
  o String      internalRef
  o Boolean     employer
  o String      salary optional
  o String      location optional
  o String      city optional
  o Double      longitude optional
  o Double      latitude optional
  o String[]    skills
  
  o String      logohash

  o Boolean     testData default=false // if set to true will generate random datePosted in the past (for testing)
}
transaction CreateJobPosting {
  o JobPostingParameters params
}

transaction ApplyForJob {
  o String jobReference
  o String email
}


transaction CreateJobAlert {
  o String email
  o AlertCriteria alertCriteria
}

transaction UpdateJobAlert {
  o String alertId
  o AlertCriteria alertCriteria
}

transaction RemoveJobAlert {
  o String alertId
}

transaction TestJobAlert {
  o String alertId
  o String name
}

// Q: do we need to store who has viewed or applied for a job?

transaction IncrementViews {
  o String jobReference
}

// transaction IncrementApplications {
//   o String jobReference
// }


transaction AddJobToFavourites {
  o String email
  o String jobReference
  o AccountType accountType default="RECRUITER"
}

transaction RemoveJobFromFavourites {
  o String email
  o String jobReference
}

transaction RemoveAllFavourites {
  o String email
}

transaction UpdateJobPosting {
  o JobPostingParameters params
}

transaction ExpireJobPosting {
  o String    jobReference
  o String    email
}

enum JobFilterType {
  o ALL
  o LIVE
  o EXPIRING
  o EXPIRED
}

enum EmployerFilterType {
  o AGENCY
  o EMPLOYER
}

enum DateFilterType {
  o THREE
  o SEVEN
  o TWENTYFOUR
}

enum ContractFilterType {
  o PERMANENT
  o CONTRACT
}

enum OnSiteType {
  o REMOTE
  o NONREMOTE
}

@commit(false)
@returns(JobAds)
transaction GetJobAds {
  o String email
}

@commit(false)
@returns(JobPosting[])
transaction GetJobPostings {
  o String email
  o String filterBy
}

@commit(false)
@returns(JobPosting[])
transaction GetFavourites {
  o String email
  o AccountType accountType default="RECRUITER"
}

@commit(false)
@returns(JobPosting[])
transaction GetJobPostingsDynamic {
  o String email
  o String filterBy optional
  o JobFilterType filterType optional
  o DateTime dateFrom optional
  o DateTime dateTo optional
  o String user optional
  o Integer expiringDays default=5
}

@commit(false)
@returns(JobPosting[])
transaction FireAlertSearch {
  o Boolean   fulltime default=true
  o String[]  skills 
  o String    city optional 
  o String    country optional
  o Boolean   remote default=false
  o BlockchainType blockchainName default="NONE"
}

@commit(false)
@returns(JobPosting[])
transaction FilterJobPostingsDynamic {
  o String filterBy default=""
  o String[] filterBySkills optional 
  o String location default=""
  o String city default=""
  o String filterType default=""
  o String dateFilter default=""
  o String employerFilter default=""
  o String jobFilter default=""
  o String onSiteFilter default=""
  o String blockchainFilter default=""
}


@commit(false)
@returns(JobPosting[])
transaction GetPopularEmployers {
}

@commit(false)
@returns(JobPosting[])
transaction GetAllLiveJobPostings {
}

@commit(false)
@returns(JobPosting)
transaction SelectJobPostingByRef {
  o String ref
}

@commit(false)
@returns(JobAlert[])
transaction GetAlertsForEmail {
  o String email
}


@commit(false)
@returns(JobApplication[])
transaction GetJobApplicationsForEmail {
  o String email
}


@commit(false)
@returns(JobApplication[])
transaction GetJobApplicationsForJobReference {
  o String jobReference
}

@commit(false)
transaction TurnAlertOnOff {
  o String alertId
  o Boolean alertOn
}

@returns(CVSearchResults)
transaction CVSearch {
  o String email
  o CVSearchCriteria searchCriteria
}

