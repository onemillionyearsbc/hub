/**
 * New query file
 */
query selectHubAccountByUserAndPassword {
    description: "Select HubAccount object where username and password match"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.HubAccount
            WHERE ((email == _$email) AND (password == _$password))
}

query selectHubRecruiterByEmail {
 description: "Select HubRecruiter object where username (email) matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.HubRecruiter
            WHERE (email == _$email) 
}

query selectHubJobSeekerByEmail {
 description: "Select HubJobSeeker object where username (email) matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.HubJobSeeker
            WHERE (email == _$email) 
}
query selectAllHubJobSeekers {
 description: "Select all HubJobSeeker objects in the registry"
    statement:      
        SELECT io.onemillionyearsbc.hubtutorial.HubJobSeeker
} 

query selectAllJobAds {
 description: "Select all JobAds objects in the registry"
    statement:      
        SELECT io.onemillionyearsbc.hubtutorial.jobs.JobAds
}      

query selectAllAccounts {
  	description: "Returns all accounts in the registry"
  	statement:
    	SELECT io.onemillionyearsbc.hubtutorial.HubAccount
}

query selectJobAds {
  	description: "Returns JobAds object for the given email in the registry"
  	statement:
    	  SELECT io.onemillionyearsbc.hubtutorial.jobs.JobAds
            WHERE (email == _$email) 
}

query selectAlerts {
  	description: "Returns Alerts for the given alert ids in the registry"
  	statement:
    	  SELECT io.onemillionyearsbc.hubtutorial.jobs.JobAlert
            WHERE (alertId CONTAINS _$alertIds) 
}

query filterJobAdsForRecruiter {
  description: "Returns JobPostings array for the given email in the registry and the filter criteria"
  	statement:
    	  SELECT io.onemillionyearsbc.hubtutorial.jobs.JobPosting
            WHERE (email == _$email AND (internalRef == _$filterBy OR jobTitle == _$filterBy OR jobReference == _$filterBy))
}

query selectJobPostingById {
  description: "Returns job posting given its id"
  	statement:
    	SELECT io.onemillionyearsbc.hubtutorial.jobs.JobPosting
        WHERE (jobReference == _$ref)
}
query selectAllJobPostings {
  	description: "Returns all job postings in the registry"
  	statement:
    	SELECT io.onemillionyearsbc.hubtutorial.jobs.JobPosting
}


query selectJobApplicationsByEmail {
 description: "Select JobApplication objects where username (email) matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.jobs.JobApplication
            WHERE (email == _$email)
}

query selectJobApplicationsByJobReference {
 description: "Select JobApplication objects where job ref matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.jobs.JobApplication
            WHERE (jobReference == _$jobReference)
}
query selectJobApplicationsByJobReferenceAndEmail {
 description: "Select JobApplication objects where job ref and email matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.jobs.JobApplication
            WHERE ((jobReference == _$jobReference) AND (email == _$email))
}


query selectJobSeekerByCity {
 description: "Select HubJobSeeker objects where city matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.HubJobSeeker
            WHERE (params.city == _$city)
}


query selectERC20TokenTransactionsByEmail {
 description: "Select ERC20TokenTransaction objects where username (email) matches"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.tokens.ERC20TokenTransaction
            WHERE (email == _$email)
}

query selectERC20Token {
 description: "Select all ERC20Token objects"
    statement:
        SELECT io.onemillionyearsbc.hubtutorial.tokens.ERC20Token
}